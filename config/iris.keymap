/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        watch: watch {
            label = "ZM_watch";
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
            bindings
                , <&macro_tap &kp W &kp A &kp T &kp C &kp H>
                ;
        };
        allns: allns {
            label = "ZM_allns";
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
            bindings
                , <&macro_tap &kp MINUS &kp MINUS &kp A &kp L &kp L &kp MINUS &kp N &kp A &kp M &kp E &kp S &kp P &kp A &kp C &kp E &kp S &kp EQUAL &kp T &kp R &kp U &kp E>
                ;
        };
        kctl: kctl {
            label = "ZM_allns";
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
            bindings
                , <&macro_tap &kp K &kp U &kp B &kp E &kp C &kp T &kp L &kp SPACE>
                ;
        };
        kconfig: kconfig {
            label = "ZM_allns";
            compatible = "zmk,behavior-macro";
            wait-ms = <40>;
            tap-ms = <40>;
            #binding-cells = <0>;
            bindings
                , <&macro_tap &kp MINUS &kp MINUS &kp K &kp U &kp B &kp E &kp C &kp O &kp N &kp F &kp I &kp G &kp SPACE &kp TILDE &kp FSLH &kp DOT &kp K &kp U &kp B &kp E &kp FSLH>
                ;
        };
   };

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//                     		  | GUI  | LOWER|  SPACE |  | ENTER | RAISE|  ALT  |
			bindings = <
&kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4   &kp N5                      &kp N6 &kp N7 &kp N8    &kp N9  &kp N0   &kp GRAVE
&kp TAB   &kp Q  &kp W  &kp E  &kp R    &kp T                       &kp Y  &kp U  &kp I     &kp O   &kp P    &kp PIPE
&kp ESC   &kp A  &kp S  &kp D  &kp F    &kp G                       &kp H  &kp J  &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X  &kp C  &kp V    &kp B   &kp CTRL &kp ALT    &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH &kp CTRL
                   			   &kp LGUI &mo 1   &kp RET  &kp SPACE  &mo 2  &kp MINUS
			>;
		};

		lower_layer {
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
//                            |      |      |        |  |       |      |       |
			bindings = <
&bt BT_CLR    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                    &trans    &trans    &trans     &trans   &trans     &trans
&kp C_BRI_UP  &kp C_PP     &kp PGDN     &kp UP       &kp PGUP     &kp C_VOL_UP                    &kp EQUAL &kp N7    &kp N8     &kp N9   &kp LBKT   &kp RBKT
&kp C_BRI_DN  &kp C_NEXT   &kp LEFT     &kp DOWN     &kp RIGHT    &kp C_VOL_DN                    &kp CARET &kp N4    &kp N5     &kp N6   &kp PLUS   &trans
&trans        &kp C_PREV   &kp HOME     &trans       &kp END      &kp C_MUTE    &trans   &trans   &kp DOT   &kp N1    &kp N2     &kp N3   &kp EQUAL  &trans
                    					             &trans       &trans        &trans   &trans   &trans    &kp N0
			>;
		};

		raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
// |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   ^   |  v   |  ->   |       |
// |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
//                            |      |      |        |  |       |      |       |
			bindings = <
&trans    &trans &trans  &trans  &trans  &trans                       &allns      &trans            &trans             &trans   &trans    &trans
&trans    &kp F1 &kp F2  &kp F3  &kp F4  &kctl                        &kp N6      &kp N7            &kp N8             &kp LPRN &kp RPRN  &trans
&trans    &kp F5 &kp F6  &kp F7  &kp F8  &kconfig                     &trans      &kp LS(LG(LEFT))  &kp LS(LG(RIGHT))  &watch   &kp PIPE  &trans
&trans    &kp F9 &kp F10 &kp F11 &kp F12 &kp F15   &trans   &trans    &kp KP_PLUS &kp RC(LEFT)      &kp RC(RIGHT)      &kp LBKT &kp BSLH  &trans
                   		   		 &trans  &trans    &trans   &trans    &trans      &trans
			>;
		};
	};
};
